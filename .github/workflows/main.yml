name: CI/CD â€” Deploy to self-hosted runner (EC2)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Build & Deploy on self-hosted runner
    runs-on: [self-hosted, linux]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install backend dependencies
        run: npm ci

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Create .env from repository secrets (optional)
        if: always()
        run: |
          echo "Writing .env from GitHub Secrets (only write keys that exist)"
          printf '%s
%s
%s
%s
%s
%s
' \
            "MONGO_URI=${{ secrets.MONGO_URI }}" \
            "JWT_SECRET=${{ secrets.JWT_SECRET }}" \
            "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
            "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" \
            "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" \
            "PORT=5000" > .env

      - name: Install PM2 globally
        run: npm install -g pm2

      - name: Start / Restart backend with PM2
        run: pm2 startOrRestart ecosystem.config.js --env production

      - name: Deploy frontend build to nginx folder
        run: |
          sudo mkdir -p /var/www/beautybook
          sudo rm -rf /var/www/beautybook/*
          sudo cp -r frontend/dist/* /var/www/beautybook/
          sudo chown -R $USER:$USER /var/www/beautybook

      - name: Reload nginx
        run: sudo systemctl reload nginx

      - name: Health check
        run: |
          sleep 2
          echo "Checking frontend (http://localhost/)"
          curl -f http://localhost/ || (echo 'Frontend healthcheck failed' && exit 1)
          echo "Checking backend (http://localhost/api/health)"
          curl -sS -f http://localhost/api/health || echo 'Backend health endpoint not found or failed (optional)'

